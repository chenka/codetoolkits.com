---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'button'> {
  selector: string | undefined;
  class?: string;
}

const { selector, class: customClass } = Astro.props;
---

<button id="copyButton" data-selector={selector} class={` ${customClass || ''}`}>Copy to Clipboard</button>
<script>
  const copyButton = document.getElementById('copyButton') as HTMLButtonElement;
  const originalButtonText = copyButton.innerText;
  const selector = copyButton.dataset.selector;

  copyButton.addEventListener('click', () => {
    if (!selector) {
        console.error('Selector is undefined or empty');
        return
    }
    const elementToCopy = document.querySelector(selector);
    if (elementToCopy) {
      if (elementToCopy instanceof HTMLTextAreaElement || elementToCopy instanceof HTMLInputElement) {
        elementToCopy.select();
        document.execCommand("copy");
        console.log('Text copied to clipboard');
      } else {
        const textToCopy: string = elementToCopy.innerText;
        navigator.clipboard.writeText(textToCopy).then(() => {
          console.log('Text copied to clipboard');
        }).catch((error: Error) => {
          console.error('Error copying text: ', error);
        });
      }
      copyButton.innerText = 'Copied';
      setTimeout(() => {
        copyButton.innerText = originalButtonText;
      }, 2000);
    } else {
      console.error('Element not found for selector:', selector);
    }
  });
</script>
